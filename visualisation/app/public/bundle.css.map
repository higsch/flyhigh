{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/CookieBanner.svelte",
    "../src/Legend/Legend.svelte",
    "../src/TimeBrush/TimeBrush.svelte",
    "../src/RadialGraph/RadialGraph.svelte",
    "../src/FlightCard/FlightCard.svelte",
    "../src/RadialGraph/Coordinates.svelte",
    "../src/RadialGraph/RadialCanvas.svelte",
    "../src/FlightCard/Fin.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Legend from './Legend/Legend.svelte';\n  import RadialGraph from './RadialGraph/RadialGraph.svelte';\n  import FlightCard from './FlightCard/FlightCard.svelte';\n  import TimeBrush from './TimeBrush/TimeBrush.svelte';\n\n  import CookieBanner from './CookieBanner.svelte';\n\n  import { onMount } from 'svelte';\n\n  import { csv as d3csv } from 'd3';\n  import { timeParser } from './utils';\n\n  // Define the data sources and define formatting callbacks\n  const dataPaths = [\n    {\n      name: 'flightInfo',\n      path: 'data/flight_info.csv',\n      callback: function (d) {\n        return {\n          ...d,\n          arrival: timeParser(d.arrival),\n          departure: timeParser(d.departure),\n          departureRounded: timeParser(d.departureRounded),\n          meanPrice: +d.meanPrice,\n          medianPrice: +d.medianPrice,\n          sumPrice: +d.sumPrice,\n          sdPrice: +d.sdPrice,\n          endPrice: isNaN(+d.endPrice) ? 0 : +d.endPrice\n        };\n      }\n    },\n    {\n      name: 'flights',\n      path: 'data/flights_by_day_to_departure.csv',\n      callback: function (d) {\n        return {\n          ...d,\n          price: parseFloat(d.price),\n          timeToDepartureDays: +d.timeToDepartureDays,\n          departure: timeParser(d.departure)\n        };\n      }\n    }\n  ];\n\n  // Setup the colors\n  const colors = {\n    lowPrice: '#2274A5',\n    endPrice: '#E3D8F1',\n    highPrice: '#EF6461',\n    lightGray: '#DDD'\n  };\n\n  let width, height;\n  // Set up the basic data object\n  let data = dataPaths.map(elem => ({name: elem.name, data: []}));\n\n  let timeRange = [];\n\n  let highlightedFlightId = null;\n\n  async function assembleFlightDetails(id) {\n    const flightInfo = await data.find(elem => elem.name === 'flightInfo').data\n  }\n\n  // Fetch the data from csv and convert to D3 appropriate json\n  onMount(async function () {\n    data = await Promise.all(dataPaths.map(entry => {\n      return {\n        name: entry.name,\n        data: d3csv(entry.path, entry.callback)\n      };\n    }));\n  });\n</script>\n\n<svelte:window bind:innerWidth={width} bind:innerHeight={height} />\n<svelte:body width={width} height={height} />\n\n<div class=\"outer-wrapper\">\n  <CookieBanner />\n  <div class=\"title-bar\">\n    <h1>30 days to takeoff</h1>\n    <h3>Following thousands of flight prices starting a month before departure.</h3>\n  </div>\n  <div class=\"top-wrapper\">\n    <div class=\"container radial-graph\">\n      {#await data.find(elem => elem.name === 'flights').data then data}\n        <RadialGraph data={data}\n                     timeRange={timeRange}\n                     colors={colors}\n                     on:flightclick={(e) => highlightedFlightId = e.detail} />\n      {/await}\n    </div>\n  </div>\n  <div class=\"info-bar\">\n    <div class=\"left legend\">\n      <Legend />\n    </div>\n    <div class=\"right\">\n      {#await data.find(elem => elem.name === 'flightInfo').data then data}\n        <FlightCard data={data.find(elem => elem.flightIdUnique === highlightedFlightId)}/>\n      {/await}\n    </div>\n  </div>\n  <div class=\"time-bar\">\n    <div class=\"container time-brush\">\n      {#await data.find(elem => elem.name === 'flightInfo').data then data}\n        <TimeBrush data={data}\n                   colors={colors}\n                   on:timerangeselected={(e) => timeRange = e.detail} />\n      {/await}\n    </div>\n  </div>\n  <div class=\"footer\">Analysis and visualisation by <a href=\"https://linkedin.com/in/matthias-stahl\">Matthias Stahl</a>, 2020.</div>\n</div>\n\n<style>\n  .outer-wrapper {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    width: 100%;\n    height: 100%;\n  }\n\n  .title-bar {\n    z-index: 300;\n    width: 100%;\n    padding: 1vh 0 0 0;\n    text-align: center;\n  }\n\n  h1 {\n    font-size: calc(1.5rem + 2.5vh);\n    font-weight: bold;\n    color: #444;\n  }\n\n  h3 {\n    margin: 0.2rem 0;\n    font-size: calc(0.8rem + 0.2vw);\n    font-weight: normal;\n    color: var(--gray);\n  }\n\n  .top-wrapper {\n    position: absolute;\n    z-index: 100;\n    width: 100%;\n    height: 90%;\n    bottom: 1vmin;\n  }\n\n  .info-bar {\n    z-index: -1;\n    flex: 1;\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .info-bar > div {\n    width: 40%;\n    max-width: 400px;\n    padding: 0.5rem;\n    color: var(--gray);\n  }\n\n  @media (orientation: portrait) and (max-width: 620px) {\n    .info-bar {\n      flex-direction: column;\n      align-items: center;\n    }\n\n    .info-bar > div {\n      width: 95%;\n      max-width: 95%;\n    }\n  }\n\n  .right {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    justify-content: flex-end;\n  }\n\n  .time-bar {\n    z-index: 300;\n    width: 100%;\n    height: 17%;\n  }\n\n  .container.radial-graph {\n    width: 100%;\n    height: 100%;\n  }\n\n  .container.time-brush {\n    width: 100%;\n    height: 100%;\n  }\n\n  .footer {\n    width: 100%;\n    padding: 0.2rem 0;\n    text-align: center;\n    font-size: 0.5rem;\n  }\n\n  .footer a {\n    color: inherit;\n  }\n</style>\n",
    "<div id=\"cookies-eu-banner\">\n  Would be great to know where you all come from. So do you accept the use of cookies for Google Analytics?\n  <button id=\"cookies-eu-reject\">Reject</button>\n  <button id=\"cookies-eu-accept\">Accept</button>\n</div>\n\n<style>\n  #cookies-eu-banner {\n    position: absolute;\n    z-index: 1000;\n    bottom: 0;\n    display: none;\n    width: 100%;\n    padding: 1rem;\n    color: white;\n    font-family: 'Arial', sans-serif;\n    font-size: 1rem;\n    background-color: var(--low-price);\n  }\n\n  #cookies-eu-banner button {\n    position: relative;\n    margin: 0 0.1rem;\n    padding: 0.1rem;\n    font-size: 0.8rem;\n    border-radius: 0.2rem;\n    background-color: white;\n    text-decoration: none;\n    border: none;\n    outline: none;\n  }\n\n  #cookies-eu-banner button:hover {\n    cursor: pointer;\n  } \n</style>\n",
    "<script>\n  const margin = 15;\n  let width, height;\n\n  $: lineWidth = ((width || 0) - margin * 3) / 3;\n  $: svgHeight = (height || 0) / 2;\n  $: lineYOffset = svgHeight / 1.5;\n  $: textYOffset = svgHeight / 2.5;\n</script>\n\n<div class=\"text\" bind:clientWidth={width} bind:clientHeight={height}>\n  <h4>How to read this chart</h4>\n  <p class=\"mt\">\n    Each line is showing prices for a flight from Stockholm to Frankfurt for one passenger â€“ collected from\n    30 days before departure until the day before takeoff.\n    The color at each time point tells whether the price is above or below the final price.\n    Change the time points by sliding the brush and try to click on the lines.\n  </p>\n</div>\n<svg width={width} height={svgHeight}>\n  <g class=\"first\" transform=\"translate({margin / 2} 0)\">\n    <line class=\"low\" x1=\"0\" y1={lineYOffset} x2={lineWidth} y2={lineYOffset}></line>\n    <text transform=\"translate({lineWidth / 2} {textYOffset})\">below</text>\n  </g>\n  <g class=\"second\" transform=\"translate({1.5 * margin + lineWidth} 0)\">\n    <line class=\"high\" x1=\"0\" y1={lineYOffset} x2={lineWidth} y2={lineYOffset}></line>\n    <text transform=\"translate({lineWidth / 2} {textYOffset})\">above</text>\n  </g>\n  <g class=\"third\" transform=\"translate({2.5 * margin + 2 * lineWidth} 0)\">\n    <line class=\"final\" x1=\"0\" y1={lineYOffset} x2={lineWidth} y2={lineYOffset}></line>\n    <text transform=\"translate({lineWidth / 2} {textYOffset})\">final price</text>\n  </g>\n</svg>\n\n<style>\n  .text {\n    margin: 0 0 0.5rem 0;\n    font-size: 0.7rem;\n  }\n\n  h4 {\n    margin: 0.3rem 0;\n    font-size: 0.9rem;\n    font-weight: bold;\n  }\n\n  svg line {\n    stroke-width: 0.3rem;\n    stroke-linecap: round;\n  }\n\n  svg line.low {\n    stroke: var(--low-price);\n  }\n\n  svg line.high {\n    stroke: var(--high-price);\n  }\n\n  svg line.final {\n    stroke: var(--end-price);\n  }\n\n  svg text {\n    font-size: 0.7rem;\n    fill: var(--gray);\n    text-anchor: middle;\n  }\n</style>\n",
    "<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n\n  import {\n    select as d3select,\n    scaleTime,\n    extent,\n    scaleLinear,\n    max as d3max,\n    line as d3line,\n    curveMonotoneX,\n    timeFormat,\n    brushX,\n    event as d3event,\n    timeDay } from 'd3';\n  import { timeParser } from '../utils';\n\n  export let data;\n  export let colors;\n\n  const shrinkingFactor = 0.75;\n  const dispatch = createEventDispatcher();\n  const padding = {\n    top: 20,\n    bottom: 10\n  };\n\n  let dataMonth;\n  let width, height;\n  let svgElement;\n  let x, y;\n  let line;\n  let path;\n  let ticks;\n  let brush;\n  let isInit = true;\n  let selectedMonth;\n  let brushPosition = [];\n  let lastDays = {\n    3: [timeParser('2019-04-24T00:00:00Z'), timeParser('2019-04-25T00:00:00Z')],\n    4: [timeParser('2019-05-24T00:00:00Z'), timeParser('2019-05-25T00:00:00Z')],\n    5: [timeParser('2019-06-24T00:00:00Z'), timeParser('2019-06-25T00:00:00Z')]\n  };\n\n  function buildBrush() {\n    d3select(svgElement).selectAll('g.brush').remove();\n\n    brush = brushX()\n      .extent([[0, 0], [width, height * shrinkingFactor]])\n      .on('brush end', brushed);\n\n    d3select(svgElement).append('g')\n      .attr('class', 'brush')\n      .call(brush)\n      .call(brush.move,\n        [x(lastDays[selectedMonth][0]), x(lastDays[selectedMonth][1])]);\n  }\n\n  function brushed() {\n    if (!isInit && !d3event.sourceEvent || !d3event.selection) return;\n    isInit = false;\n    \n    const selectionX = d3event.selection;\n    let selectionTime = selectionX.map(x.invert);\n\n    let selectionTimeRounded = selectionTime.map(timeDay.round);\n\n    if (selectionTimeRounded[0] >= selectionTimeRounded[1]) {\n      selectionTimeRounded[0] = timeDay.floor(selectionTime[0]);\n      selectionTimeRounded[1] = timeDay.offset(selectionTimeRounded[0]);\n    }\n\n    if (selectionTimeRounded[1] > x.domain()[1]) {\n      selectionTimeRounded[1] = x.domain()[1];\n    }\n\n    // Subtract a few milliseconds to get to the day before\n    selectionTimeRounded[1] = new Date(selectionTimeRounded[1] - 100);\n\n    if (d3event.type === 'end') {\n      d3select(this).transition().call(d3event.target.move, selectionTimeRounded.map(x));\n    }\n\n    if (lastDays[selectedMonth].toString() !== selectionTimeRounded.toString()) {\n      lastDays[selectedMonth] = [selectionTimeRounded[0], selectionTimeRounded[1]];\n      dispatch('timerangeselected', selectionTimeRounded);\n      brushPosition = selectionX;\n    }\n  }\n\n  function selectMonth(month) {\n    if (!month) return;\n    isInit = true;\n    dataMonth = data.filter(elem => elem.departure.getMonth() === month);\n    dispatch('timerangeselected', lastDays[selectedMonth]);\n  }\n\n  onMount(() => {\n    selectedMonth = 3;\n  });\n  \n  $: selectMonth(selectedMonth);\n\n  $: if (dataMonth && dataMonth.length > 0 && width && height) {\n    x = scaleTime()\n      .domain(extent(dataMonth, d => d.departure))\n      .range([0, width]);\n\n    y = scaleLinear()\n      .domain([0, d3max(data, d => d.endPrice)])\n      .range([height * shrinkingFactor, padding.top]);\n\n    line = d3line()\n      .x(d => x(d.departure))\n      .y(d => y(d.endPrice))\n      .curve(curveMonotoneX);\n    \n    path = line(dataMonth);\n\n    const tickInterval = 3;\n    let lastTime = dataMonth[0].departure;\n    ticks = dataMonth.map(({ departure }, index) => {\n      let show;\n      if ((departure - lastTime) / (1000 * 60 * 60 * 24) >= tickInterval) {\n        lastTime = departure;\n        show = true;\n      } else {\n        show = false;\n      }\n      return {\n        id: index,\n        departure,\n        show\n      };\n    });\n    ticks = ticks.slice(3, -3);\n  }\n\n  $: if (x && svgElement) buildBrush();\n</script>\n\n<div class=\"wrapper\" bind:offsetWidth={width} bind:offsetHeight={height}>\n  <div class=\"top-line\">\n    <div class=\"label\">Final prices per departure date in</div>\n    <div class=\"month-selector\" class:active={selectedMonth === 3} on:click={() => selectedMonth = 3}>April</div>\n    <div class=\"month-selector\" class:active={selectedMonth === 4} on:click={() => selectedMonth = 4}>May</div>\n    <div class=\"month-selector\" class:active={selectedMonth === 5} on:click={() => selectedMonth = 5}>June</div>\n    <div class=\"label\">2019.</div>\n  </div>\n  {#if path}\n    <svg bind:this={svgElement}>\n      <g class=\"axis\" transform=\"translate(0 {height * shrinkingFactor - padding.bottom})\">\n        {#each ticks as {departure, show, id}, i (id)}\n          {#if show}\n            <g class=\"tick\" transform=\"translate({x(departure)} 0)\">\n              <circle cx={0} cy={-12} r=\"2\"></circle>\n              <text>{timeFormat('%b %d')(departure)}</text>\n            </g>\n          {/if}\n        {/each}\n      </g>\n      <g class=\"end-price\" transform=\"translate(0 -10)\">\n        <path class=\"end-price-line\"\n              stroke-width={Math.max(width, height * shrinkingFactor) / 700}\n              d={path}></path>\n      </g>\n    </svg>\n  {/if}\n</div>\n\n<style>\n  .wrapper {\n    flex-direction: column;\n  }\n\n  .top-line {\n    align-self: flex-start;\n    display: flex;\n    align-items: center;\n    margin-left: 0.5rem;\n  }\n\n  .label {\n    font-size: 0.8rem;\n    color: var(--gray);\n  }\n\n  .month-selector {\n    margin: 0.3rem;\n    padding: 0.3rem;\n    font-size: 0.9rem;\n    color: var(--gray);\n    background-color: var(--end-price);\n    border-radius: 3px;\n    border: 2px solid transparent;\n    cursor: pointer;\n  }\n\n  .month-selector:hover, .month-selector.active {\n    border-color: var(--gray);\n  }\n\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  svg text {\n    -webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none;\n  }\n\n  g.end-price path {\n    stroke: var(--end-price);\n    fill: none;\n  }\n\n  g.tick text {\n    fill: var(--gray);\n    font-size: 0.7rem;\n    text-anchor: middle;\n  }\n\n  g.tick circle {\n    fill: var(--gray);\n  }\n</style>\n",
    "<script>\n  import Coordinates from './Coordinates.svelte';\n  import RadialCanvas from './RadialCanvas.svelte';\n\n  import {\n    max as d3max,\n    nest,\n    scaleLinear,\n    lineRadial,\n    curveCatmullRom,\n    timeFormat } from 'd3';\n  import { formatTime } from '../utils';\n\n  export let data;\n  export let timeRange = [];\n  export let colors;\n\n  const sizeOffset = 10;\n  const pi2 = 2 * Math.PI;\n  const days = 30;\n  const timeStep = 0.5;\n  const daysOnCircle = 35;\n  const dayOffset = -2;\n\n  const line = lineRadial()\n    .angle(d => d.angle)\n    .radius(d => d.radius)\n    .curve(curveCatmullRom.alpha(0.5));\n\n  let width, height;\n  let maxPrice = 0;\n  let priceScale;\n  let dataPreCalc;\n  let radialDataIndex;\n  let slicedData;\n  let legendArr = [];\n\n  let nextCol = 1;\n\n  function generateColor(){\n    let ret = [];\n    if(nextCol < 16777215) {\n      ret.push(nextCol & 0xff); // R\n      ret.push((nextCol & 0xff00) >> 8); // G \n      ret.push((nextCol & 0xff0000) >> 16); // B\n\n      nextCol += 1;\n    }\n    const col = `rgb(${ret.join(',')})`;\n    return col;\n  }\n\n  function dayToAngle(day) {\n    return -pi2 * day / daysOnCircle + pi2 * dayOffset / daysOnCircle;\n  }\n\n  function preCalculateGeometry(dataNested) {\n    return dataNested.map(priceLine => {\n      let priceLineData = [];\n      let endRadius = -100;\n      let gapArr = [];\n      let previousDay = days;\n\n      priceLine.values.forEach(d => {\n        const radius = priceScale(d.price);\n        const angle = dayToAngle(d.timeToDepartureDays);\n\n        if (d.timeToDepartureDays === 1) endRadius = radius;\n\n        const point = {\n          radius,\n          angle,\n          price: d.price,\n          timeToDepartureDays: d.timeToDepartureDays\n        };\n        priceLineData.push(point);\n\n        // Keep track of data gaps\n        gapArr.push(previousDay - d.timeToDepartureDays > timeStep);\n        previousDay = d.timeToDepartureDays;\n      });\n      \n      const minRadius = Math.min(...priceLineData.map(elem => elem.radius));\n      const maxRadius = Math.max(...priceLineData.map(elem => elem.radius));\n      const middleStop = Math.min((endRadius - minRadius) / (maxRadius - minRadius), 1.0) || 0;\n\n      // Calculate the path for the whole line\n      const path = line(priceLineData);\n      const objectPath = path.split('C').map((elem, i) =>{\n        return {\n          type: elem[0] === 'M' ? 'M' : 'C', \n          gap: gapArr[i] || false,\n          d: elem.replace('M', '').split(','),\n          price: priceLineData[i].price,\n          timeToDepartureDays: priceLineData[i].timeToDepartureDays\n        };\n      });\n\n      return {\n        id: priceLine.key,\n        path: objectPath,\n        minRadius,\n        maxRadius,\n        endRadius,\n        middleStop,\n        departure: priceLine.values[0].departure,\n        colorId: generateColor()\n      };\n    });\n  }\n\n  function formatCenterTimeRange(timeRange) {\n    const weekday = timeFormat('%a')(timeRange[0]);\n    const time1 = timeFormat('%b %d')(timeRange[0]).replace(' ', '&nbsp;');\n    const time2 = timeFormat('%d')(timeRange[1]).replace(' ', '&nbsp;');\n    return (time1 === timeFormat('%b %d')(timeRange[1]).replace(' ', '&nbsp;')) ? `${weekday}, ${time1}` : `${time1} - ${time2}`;\n  }\n\n  function prepareData() {\n    maxPrice = d3max(data, d => d.price);\n    \n    // Define the price scale, i.e. radii\n    priceScale = scaleLinear()\n      .domain([0, maxPrice])\n      .range([Math.min(width, height) / 11, Math.min(width, height) * 0.5]);\n\n    // Nest the data by unique flights\n    const dataNested = nest()\n      .key(d => d.flightIdUnique)\n      .entries(data);\n\n    // Precalculate geometrical parameters for the whole dataset\n    dataPreCalc = preCalculateGeometry(dataNested);\n\n    // build a departure index\n    if (dataPreCalc.length > 0) {\n      radialDataIndex = {};\n      dataPreCalc.forEach((d, index) => {\n        const departure = formatTime(d.departure);\n        if (!Object.keys(radialDataIndex).includes(departure)) {\n          radialDataIndex[departure] = [index];\n        } else {\n          radialDataIndex[departure] = [radialDataIndex[departure][0], index];\n        }\n      });\n    }\n  }\n\n  function sliceData(timeRange) {\n    if (radialDataIndex && timeRange.length === 2) {\n      if (timeRange.reduce((a, c) => Math.abs(a - c)) / (1000 * 60 * 60) <= 24) {\n        timeRange = [timeRange[0], timeRange[0]];\n      }\n      const tr = timeRange.map(formatTime);\n      const start = radialDataIndex[tr[0]][0];\n      const stop = radialDataIndex[tr[1]][1] || radialDataIndex[tr[1]][0];\n      slicedData = dataPreCalc.slice(start, stop + 1);\n    } else {\n      slicedData = dataPreCalc;\n    }\n  }\n\n  $: if (width && height && data && data.length > 0) prepareData();\n\n  $: if (dataPreCalc) sliceData(timeRange);\n</script>\n\n<div class=\"wrapper\" bind:offsetWidth={width} bind:offsetHeight={height}>\n  <Coordinates priceScale={priceScale}\n               dayToAngle={dayToAngle}\n               width={width - sizeOffset}\n               height={height - sizeOffset}\n               colors={colors} />\n  <RadialCanvas data={slicedData}\n                width={width - sizeOffset}\n                height={height - sizeOffset}\n                colors={colors}\n                on:flightclick />\n  {#if priceScale && timeRange}\n    <div class=\"selected-time-range\"\n         style=\"width: {priceScale(300)}px;\">\n      <span class=\"pre-string\">Departure</span>\n      {@html formatCenterTimeRange(timeRange)}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .wrapper {\n    position: relative;\n    max-width: 1060px;\n    margin: 0 auto;\n  }\n\n  .selected-time-range {\n    position: absolute;\n    z-index: 100;\n    font-size: calc(0.5rem + 1vmin);\n    text-align: center;\n    color: var(--gray);\n  }\n\n  .selected-time-range .pre-string {\n    display: block;\n    font-size: calc(0.4rem + 1vmin);\n  }\n</style>\n",
    "<script>\n  import { fade } from 'svelte/transition';\n\n  import { timeFormat } from 'd3';\n\n  import Fin from './Fin.svelte';\n\n  export let data;\n  \n  const timeFormatter = timeFormat('%H:%M');\n</script>\n\n{#if data}\n  <div class=\"wrapper\" transition:fade=\"{{ duration: 200}}\">\n    <div class=\"info\">\n      <span>Flight</span>{data.flightId}<br />\n      <span>Departure</span>{timeFormatter(data.departure)}<br />\n      <span>Arrival</span>{timeFormatter(data.arrival)}<br />\n      <span>Final price</span>{Math.round(data.endPrice)} â‚¬\n    </div>\n    <div class=\"fin\">\n      <Fin company={data.company} />\n    </div>\n  </div>\n{/if}\n\n\n<style>\n  .wrapper {\n    height: 40%;\n    align-items: flex-end;\n    justify-content: flex-end;\n  }\n\n  .info {\n    font-size: 1rem;\n    line-height: 1.3;\n  }\n\n  .info span {\n    display: inline-block;\n    width: 5.5rem;\n    font-size: 0.8rem;\n  }\n\n  .fin {\n    max-width: 40%;\n  }\n</style>\n",
    "<script>\n  import {\n    arc as d3arc,\n    curveBasis,\n    range as d3range } from 'd3';\n\n  export let priceScale;\n  export let dayToAngle;\n  export let priceLabels = [100, 300, 500];\n  export let width = 0;\n  export let height = 0;\n  export let colors;\n\n  const pi2 = Math.PI * 2;\n  const arc = d3arc()\n    .innerRadius(d => d.radius)\n    .outerRadius(d => d.radius)\n    .startAngle(d => d.startAngle)\n    .endAngle(d => d.endAngle);\n  const maxDays = 31;\n  const arcDays = d3arc()\n    .innerRadius(d => d.innerRadius)\n    .outerRadius(d => d.outerRadius)\n    .startAngle(d => d.startAngle)\n    .endAngle(d => d.endAngle)\n    .cornerRadius(3);\n\n  let priceCoords, dayArcs, dayArcsLabel;\n\n  function addNumberCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\n  $: if (priceScale) {\n    priceCoords = priceLabels.map(price => ({\n      label: `${addNumberCommas(price)} â‚¬`,\n      radius: priceScale(price)\n    }));\n\n    dayArcs = d3range(1, maxDays - 1, 1).map(day => {\n      return {\n        innerRadius: priceScale(525),\n        outerRadius: priceScale(550),\n        startAngle: dayToAngle(day),\n        endAngle: dayToAngle(day + 1)\n      };\n    });\n\n    dayArcsLabel = {\n      innerRadius: priceScale(570),\n      outerRadius: priceScale(575),\n      startAngle: dayToAngle(maxDays - 1),\n      endAngle: dayToAngle(maxDays - 4.5)\n    };\n  }\n</script>\n\n<svg width={width || 0} height={height || 0}>\n  <defs>\n    <marker id=\"arrow\"\n            viewBox=\"0 -5 10 10\"\n            refX=\"5\"\n\t\t\t\t\t  refY=\"0\"\n\t\t\t\t\t  markerWidth=\"4\"\n\t\t\t\t\t  markerHeight=\"4\"\n\t\t\t\t\t  orient=\"auto\">\n      <path d=\"M0,-5L10,0L0,5\" class=\"arrow-head\"></path>\n    </marker>\n  </defs>\n  {#if priceCoords}\n    <g class=\"price-coords\" transform=\"translate({width / 2} {height / 2})\">\n      {#each priceCoords as { label, radius, startAngle, endAngle }, i}\n        <g class=\"price-coord\">\n          <path class=\"price-circle\" d={arc({radius, startAngle: 0, endAngle: pi2})}></path>\n          <g class=\"price-label\" transform=\"translate(0 {- radius - 6})\">\n            <text>\n              {label}\n            </text>\n          </g>\n        </g>\n      {/each}\n    </g>\n  {/if}\n  {#if dayArcs}\n    <g class=\"day-arcs\" transform=\"translate({width / 2} {height / 2})\">\n      {#each dayArcs as a, i}\n        <path d=\"{arcDays(a)}\" class={i % 2 === 0 ? 'even' : 'odd'}></path>\n      {/each}\n    </g>\n  {/if}\n  {#if priceScale}\n    <g class=\"day-arcs-label\" transform=\"translate({width / 2} {height / 2})\">\n      <path class=\"direction-arrow\" d=\"{arc({radius: priceScale(590), startAngle: dayToAngle(maxDays - 4.5), endAngle: dayToAngle(maxDays - 1)}).replace('Z', '')}\"\n            marker-end=\"url(#arrow)\"></path>\n      <path id=\"text-path-start\" class=\"text-path\" d=\"{arc({radius: priceScale(525), startAngle: dayToAngle(maxDays + 1.1), endAngle: dayToAngle(maxDays - 0.9)}).replace('Z', '')}\"></path>\n      <text>\n        <textPath href=\"#text-path-start\" startOffset=\"27%\">-{maxDays - 1} days</textPath>\n      </text>\n      <path id=\"text-path-end\" class=\"text-path\" d=\"{arc({radius: priceScale(525), startAngle: dayToAngle(2.2), endAngle: dayToAngle(-0.4)}).replace('Z', '')}\"></path>\n      <text>\n        <textPath href=\"#text-path-end\" startOffset=\"38%\">takeoff</textPath>\n      </text>\n    </g>\n  {/if}\n</svg>\n\n<style>\n  svg {\n    position: absolute;\n    z-index: 0;\n  }\n\n  marker#arrow path {\n    stroke: none;\n    fill: var(--light-gray);\n    opacity: 1;\n  }\n\n  g.price-coord path.price-circle {\n    stroke: var(--light-gray);\n    stroke-width: 0.4vmin;\n    stroke-opacity: 0.4;\n  }\n\n  g text {\n    fill: var(--gray);\n    text-anchor: middle;\n    font-size: calc(0.3rem + 0.6vmin);\n  }\n\n  g.day-arcs path.odd {\n    fill: none;\n  } \n\n  g.day-arcs path.even {\n    fill: var(--light-gray);\n    fill-opacity: 0.5;\n  }\n\n  g.day-arcs-label path.direction-arrow {\n    stroke: var(--light-gray);\n    stroke-opacity: 0.5;\n    stroke-width: 0.3vmin;\n    stroke-linecap: round;\n  }\n\n  g.day-arcs-label path.text-path {\n    stroke: none;\n  }\n</style>\n",
    "<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n  import { fade } from 'svelte/transition';\n\n  import {\n    select as d3select } from 'd3';\n\n  export let data;\n  export let width;\n  export let height;\n  export let colors;\n\n  const dispatch = createEventDispatcher();\n  const sf = 2;\n  const globalAlpha = 1.0;\n  const dashSwitch = [[], [1, 7]];\n\n  let canvasElement, hiddenCanvasElement, canvas, ctx, hiddenCanvas, hiddenCtx;\n  let canvasData;\n  let line;\n  let lineWidth = 2;\n\n  let dotsG;\n\n  let highlightId = null;\n  let highlightedPoints = 60;\n\n  let tooltip;\n\n  function setupCanvas() {\n    lineWidth = 2.7 * Math.min(width, height) / 450;\n\n    function init(canvas, ctx) {\n      canvas\n        .attr('width', sf * width)\n        .attr('height', sf * height)\n        .style('width', `${width}px`)\n        .style('height', `${height}px`);\n      ctx.scale(sf, sf);\n      ctx.translate(width / 2, height / 2);\n      ctx.lineWidth = ctx.canvas.classList[0] === 'hidden' ? 2 * lineWidth : lineWidth;\n      return [canvas, ctx];\n    }\n\n    [canvas, ctx] = init(canvas, ctx);\n    [hiddenCanvas, hiddenCtx] = init(hiddenCanvas, hiddenCtx);\n  }\n\n  function renderColorGradients() {\n    return data.map(d => {\n      let color = ctx.createRadialGradient(0, 0, d.minRadius, 0, 0, d.maxRadius);\n      \n      color.addColorStop(0, (d.middleStop < 0.01) ? colors.endPrice : colors.lowPrice);\n      color.addColorStop(d.middleStop, colors.endPrice);\n      color.addColorStop(1, (d.middleStop > 0.99) ? colors.endPrice : colors.highPrice);\n\n      return {\n        ...d,\n        color\n      };\n    });\n  }\n\n  function drawCanvas(mode, highlightId = null) {\n    const context = (mode === 'hidden') ? hiddenCtx : ctx;\n\n    context.clearRect(- width / 2, - height / 2, width, height);\n\n    canvasData.forEach(({ id, path, color, colorId }) => {\n      context.globalAlpha = (!highlightId) ? globalAlpha : ((highlightId === id) ? 1.0 : 0.1);\n      context.lineCap = 'round';\n      context.setLineDash(dashSwitch[0]);\n      context.strokeStyle = mode === 'hidden' ? colorId : color;\n      context.beginPath();\n      path.forEach((point, i , arr) => {\n        if (arr[i - 1] && point.gap !== arr[i - 1].gap) {\n          context.setLineDash(dashSwitch[Number(arr[i - 1].gap)]);\n          context.stroke();\n          context.beginPath();\n          context.moveTo(...arr[i - 1].d.slice(-2));\n        }\n\n        if (point.type === 'M') {\n          context.moveTo(...point.d);\n        } else if (point.type === 'C') {\n          context.bezierCurveTo(...point.d);\n        }\n      });\n      context.setLineDash(dashSwitch[Number(path[path.length - 1].gap)]);\n      context.stroke();\n    });\n  }\n\n  function highlightFlight(highlightId) {\n    if (!data) return;\n\n    const highlightedFlight = data.find(elem => elem.id === highlightId);\n\n    let dots = [];\n    if (highlightedFlight) {\n      dots = highlightedFlight.path.map((point, i) => {\n        return {\n          id: i,\n          cx: point.d[4] || point.d[0],\n          cy: point.d[5] || point.d[1],\n          price: point.price,\n          timeToDepartureDays: point.timeToDepartureDays\n        };\n      });\n      highlightedPoints = dots.length;\n      drawCanvas('visible', highlightId);\n    } else {\n      drawCanvas('visible');\n    }\n\n    const t = d3select(dotsG).transition().duration(300);\n\n    d3select(dotsG).selectAll('.dot')\n      .data(dots, (d) => d.id)\n      .join(\n        enter => enter.append('circle')\n                  .call(enter => enter.transition(t).delay((d) => d.id * 7)\n                    .attr('cx', (d) => +d.cx)\n                    .attr('cy', (d) => +d.cy)),\n        update => update\n                    .call(enter => enter.transition(t)\n                      .attr('cx', (d) => +d.cx)\n                      .attr('cy', (d) => +d.cy)),\n        exit => exit\n                  .call(enter => enter.transition(t).delay((d) => (highlightedPoints - d.id) * 7)\n                    .attr('cx', 0)\n                    .attr('cy', 0)\n                    .remove())\n      )\n      .attr('class', 'dot')\n      .attr('fill', '#321321')\n      .attr('fill-opacity', 0.6)\n      .attr('r', lineWidth * 1.1)\n      .on('mouseover', (d) => setTooltip(d.price, d.timeToDepartureDays, d.cx, d.cy))\n      .on('mouseout', (d) => setTooltip(null));\n\n      dispatch('flightclick', highlightId);\n  }\n\n  function handleClick(e) {\n    const col = hiddenCtx.getImageData(e.layerX * sf, e.layerY * sf, 1, 1).data;\n    const colorId = `rgb(${col[0]},${col[1]},${col[2]})`;\n    const flight = canvasData.find(elem => elem.colorId === colorId);\n    if (flight) {\n      highlightId = flight.id;\n    } else {\n      highlightId = null;\n    }\n  }\n\n  function setTooltip(price, timeToDepartureDays = 0, x = 0, y = 0) {\n    if (price === null) {\n      tooltip = null;\n      return;\n    }\n\n    const tooltipWidth = 150;\n    const tooltipHeight = 50;\n    tooltip = {\n      textDays: `${timeToDepartureDays === 1 ? 'final price' : timeToDepartureDays + ' days to departure.'}`,\n      textPrice: `${Math.round(price)} â‚¬`,\n      x: Number(x) - tooltipWidth / 2,\n      y: Number(y) + 10,\n      width: tooltipWidth,\n      height: tooltipHeight\n    };\n  }\n\n  onMount(() => {\n    canvas = d3select(canvasElement);\n    ctx = canvas.node().getContext('2d');\n    hiddenCanvas = d3select(hiddenCanvasElement);\n    hiddenCtx = hiddenCanvas.node().getContext('2d');\n  });\n\n  $: width = width || 0;\n  $: height = height || 0;\n\n  $: if (width && height) setupCanvas();\n\n  $: if (data && data.length > 0) {\n    canvasData = renderColorGradients();\n    drawCanvas('visible', highlightId);\n    drawCanvas('hidden');\n    if (!canvasData.map(elem => elem.id).includes(highlightId)) highlightId = null;\n  }\n\n  $: highlightFlight(highlightId);\n</script>\n\n<svelte:window on:click={() => {if (highlightId !== null) highlightId = null;}}/>\n\n<svg width={width} height={height} on:click|stopPropagation={(e) => handleClick(e)}>\n  <g class=\"circle-origin\" transform=\"translate({width / 2} {height / 2})\">\n    <g bind:this={dotsG}></g>\n    {#if tooltip}\n      <g class=\"tooltip\" transform=\"translate({tooltip.x} {tooltip.y})\" transition:fade>\n        <rect x=\"0\" y=\"0\" width={tooltip.width} height={tooltip.height} rx=\"6\" ry=\"6\"></rect>\n        <text class=\"price\" transform=\"translate({tooltip.width / 2} {tooltip.height * 0.4})\">{tooltip.textPrice}</text>\n        <text class=\"days\" transform=\"translate({tooltip.width / 2} {tooltip.height * 0.75})\">{tooltip.textDays}</text>\n      </g>\n    {/if}\n  </g>\n</svg>\n<canvas class=\"visible\" bind:this={canvasElement}></canvas>\n<canvas class=\"hidden\" bind:this={hiddenCanvasElement}></canvas>\n\n<style>\n  svg {\n    position: absolute;\n    z-index: 200;\n  }\n\n  g.tooltip rect {\n    fill: #FFFFFF;\n    fill-opacity: 1;\n    stroke: var(--gray);\n    stroke-width: 1;\n    stroke-dasharray: 4;\n  }\n\n  g.tooltip text {\n    fill: var(--gray);\n    text-anchor: middle;\n  }\n\n  g.tooltip text.price {\n    font-weight: bold;\n  }\n\n  g.tooltip text.days {\n    font-size: 0.8rem;\n  }\n\n  canvas.visible {\n    position: absolute;\n    z-index: 100;\n  }\n\n  canvas.hidden {\n    display: none;\n    position: absolute;\n    z-index: -1;\n  }\n</style>\n",
    "<script>\n  export let company;\n</script>\n\n{#if (company && company === 'LH')}\n  <svg viewBox=\"0 0 556 376\" class=\"lh\">\n    <g class=\"background\">\n      <path d=\"M557,0,412,376H0L45.9632,357.23952q3.03574-1.23912,5.97062-2.70642l40.54441-20.27222a47.159,47.159,0,0,0,4.87542-2.81329l27.48592-18.129a174.30662,174.30662,0,0,0,31.217-26.31882L411.15042,14.77942A46.73792,46.73792,0,0,1,445.25449,0Z\" />\n    </g>\n    <g class=\"logo\" transform=\"translate(245 160) scale(5)\">\n      <path d=\"M38 19C38 8.474 29.526 0 19 0 8.512 0 0 8.474 0 19c0 10.488 8.512 19 19 19 10.526 0 19-8.512 19-19zm-1.368 0c0 9.69-7.904 17.632-17.632 17.632-9.69 0-17.632-7.941-17.632-17.632C1.368 9.272 9.31 1.368 19 1.368c9.728 0 17.632 7.904 17.632 17.632zm-10.906-1.14c-.418 0-.95 0-1.634.038l.494-.836h.798c2.85 0 4.978.152 6.916.494l.874-.836c-2.166-.38-4.788-.608-7.448-.608h-.646l.418-.798h.722c2.774 0 5.282.228 7.714.684l.912-.874c-2.736-.532-5.662-.797-8.816-.797a45.9 45.9 0 0 0-4.028.19c-1.52 3.267-3.952 5.168-6.688 5.13-1.064-.039-2.395-.494-4.104-1.407l-1.596-.912.494-.456 3.686 1.596.798-.608-7.448-3.382-1.14.874-2.66-1.102.038 1.102c3.572 1.634 5.054 2.546 8.816 5.244 4.902 3.496 9.272 5.396 15.352 6.612l1.596-1.52h-.38c-4.028 0-7.638-1.33-9.728-3.572 1.748-1.064 3.913-1.557 6.916-1.557.798 0 1.938.075 3.002.189l.912-.874a36.194 36.194 0 0 0-4.294-.266 35.23 35.23 0 0 0-2.888.114l.684-.836a43.437 43.437 0 0 1 2.432-.076c2.014 0 3.344.076 4.864.304l.874-.836c-1.596-.265-3.8-.418-5.814-.418z\" />\n    </g>\n  </svg>\n{:else if (company && company === 'SK')}\n  <svg viewBox=\"0 0 556 376\" class=\"sas\">\n    <g class=\"background\">\n      <path d=\"M557,0,412,376H0L45.9632,357.23952q3.03574-1.23912,5.97062-2.70642l40.54441-20.27222a47.159,47.159,0,0,0,4.87542-2.81329l27.48592-18.129a174.30662,174.30662,0,0,0,31.217-26.31882L411.15042,14.77942A46.73792,46.73792,0,0,1,445.25449,0Z\" />\n    </g>\n    <g class=\"logo\" transform=\"translate(165 250) scale(3.6)\">\n      <path d=\"M47.1993352,0.806896552 L39.9664312,0.806896552 C39.5955131,0.806896552 39.410054,0.986206897 39.410054,0.986206897 L19.4732032,25.0137931 C19.3804736,25.1931034 19.3804736,25.2827586 19.5659327,25.2827586 L22.533278,25.2827586 C22.8114665,25.2827586 22.9041961,25.1931034 22.9041961,25.1034483 L27.1697549,19.8137931 C27.1697549,19.8137931 27.2624844,19.7241379 27.355214,19.7241379 L34.4953884,19.7241379 C34.4953884,19.7241379 34.588118,19.7241379 34.588118,19.8137931 C34.588118,19.9034483 33.568093,25.0137931 33.568093,25.0137931 C33.568093,25.1034483 33.568093,25.2827586 33.8462817,25.2827586 L42.4701288,25.2827586 C42.5628583,25.2827586 42.6555879,25.2827586 42.6555879,25.1034483 L47.4775239,1.07586207 C47.3847943,1.07586207 47.4775239,0.806896552 47.1993352,0.806896552 L47.1993352,0.806896552 Z M34.9590361,17.3034483 L29.3952638,17.3034483 C29.3952638,17.3034483 29.3952638,17.3034483 29.3025342,17.3034483 L29.3025342,17.2137931 L36.7208974,7.97931034 L36.8136269,7.88965517 C36.9063565,7.88965517 36.8136269,7.97931034 36.8136269,7.97931034 L34.9590361,17.3034483 C35.0517657,17.2137931 35.0517657,17.2137931 34.9590361,17.3034483 Z M0.185459077,22.2344827 C0.185459077,22.2344827 0.83456585,20.0827586 0.927295391,20.1724138 C0.927295391,19.8137931 1.11275447,19.7241379 1.29821354,19.9034483 C2.13277939,20.7103448 4.72920648,23.1310344 8.3456585,23.1310344 C12.3330287,23.1310344 12.05484,19.9931034 12.05484,19.5448276 C12.05484,18.2896552 10.3857084,12.1034483 9.92206063,10.4896552 C8.62384711,5.28965517 11.869381,0.537931034 19.5659327,0.537931034 C23.6460324,0.537931034 25.6860822,1.6137931 26.4279185,1.97241379 C26.8915663,2.24137931 26.7988367,2.6 26.7988367,2.6 C26.7988367,2.6 26.335189,4.48275862 26.335189,4.66206897 C26.2424595,4.84137931 26.0570004,4.84137931 25.8715413,4.66206897 C24.6660574,3.94482759 23.2751143,3.13793103 21.1423349,3.13793103 C18.6386373,3.13793103 17.3404238,4.93103448 17.9895305,7.53103448 C18.2677192,8.42758624 19.8441213,14.6137931 20.1223099,15.8689656 C21.2350644,20.3517241 18.0822601,25.7310344 9.55114248,25.7310344 C4.82193602,25.7310344 1.85459077,24.0275862 0.83456585,23.2206897 C0.278188616,22.7724138 0.0927295391,22.5034483 0.185459077,22.2344827 Z M45.5302036,22.3241379 C45.5302036,22.3241379 45.9938513,19.9931034 45.9938513,20.1724138 C46.0865808,19.9034483 46.3647695,19.8137931 46.5502285,19.9931034 C47.4775239,20.8 49.8884919,23.1310344 53.5049439,23.1310344 C57.4923141,23.1310344 57.2141255,19.9931034 57.2141255,19.5448276 C57.2141255,18.2896552 55.5449938,12.1034483 55.0813461,10.4896552 C53.7831325,5.28965517 57.0286664,0.537931034 64.7252181,0.537931034 C68.8053178,0.537931034 70.8453677,1.6137931 71.587204,1.97241379 C72.0508517,2.24137931 71.9581221,2.6 71.9581221,2.6 C71.9581221,2.6 71.4944745,4.48275862 71.4944745,4.66206897 C71.4017449,4.84137931 71.2162858,4.84137931 71.0308267,4.66206897 C69.8253427,3.94482759 68.4343997,3.13793103 66.3016203,3.13793103 C63.7979227,3.13793103 62.4997092,4.93103448 63.1488159,7.53103448 C63.4270046,8.42758624 65.0034068,14.6137931 65.2815953,15.8689656 C66.3943498,20.3517241 63.2415455,25.7310344 54.7104279,25.7310344 C49.9812215,25.7310344 47.1993352,24.1172414 46.1793104,23.3103448 C45.6229331,22.862069 45.437474,22.5931034 45.5302036,22.3241379 Z\" />\n    </g>\n  </svg>\n{/if}\n\n<style>\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n\n  path {\n    fill-opacity: 1;\n  }\n\n  svg g.logo path {\n    fill: #FFFFFF;\n  }\n\n  svg.lh g.background path {\n    fill: var(--lh);\n}\n\n  svg.sas g.background path {\n    fill: var(--sas);\n}\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}